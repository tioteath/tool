#!/bin/sh
## track amazon's ip ranges; update iptables rules
die() { printf -- "$@\n" >&2; exit 1; }

_tmp=$(mktemp -d)
trap "test -d $_tmp && rm --force --recursive $_tmp && exit" INT TERM EXIT

set -e
test -n "${DEBUG}" && set -x
_uri='https://ip-ranges.amazonaws.com/ip-ranges.json'
_region=${REGION:-'us-east-1'}
_comment="managed by $(basename $0)"

_sanity_check_limit=100

# pass CIDR
rule() {
  _action=$1 # delete/append
  _ip_range=$2
  iptables --table filter --$_action INPUT --match state --state NEW  \
           --source $_ip_range --jump ACCEPT \
           --match comment --comment "$_comment"
}

if type curl > /dev/null 2>&1; then
  _fetch="curl --silent $_uri"
else if type wget > /dev/null 2>&1; then
  _fetch="wget --quiet $_uri -O-"
else
  printf -- "Unable to run: neither \`curl' nor \`wget' is available"
fi;fi

$_fetch | tr -d '"\n ' \
        | tr '{}' '\n' \
        | grep "ip_prefix:.*region:$_region" \
        | sed 's/^ip_prefix:\([ 0-9\.\/]*\),.*/\1/g; s#/32##g' \
        | sort --unique \
        > $_tmp/range-list.new

# Sanity check
_range_count=$(wc --lines < $_tmp/range-list.new)
test $_range_count -ge $_sanity_check_limit \
    || die "Expected to obtain at least ${_sanity_check_limit} of ranges, " \
           "got ${_range_count}"

iptables  --list  --numeric \
  | grep --fixed-strings "$_comment" \
  | tr --squeeze-repeats ' ' \
  | cut --delimiter=' ' --fields=4 \
  | sort >  $_tmp/range-list.current

# Add missing ranges
for _range in $(comm --check-order -13 $_tmp/range-list.current $_tmp/range-list.new); do
  rule append $_range
done

# Remove outdated ranges
for _range in $(comm --check-order -23 $_tmp/range-list.current $_tmp/range-list.new); do
  rule delete $_range
done
